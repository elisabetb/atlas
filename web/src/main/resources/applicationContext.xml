<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2008-2013 Microarray Informatics Team, EMBL-European Bioinformatics Institute
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~
  ~ For further details of the Gene Expression Atlas project, including source code,
  ~ downloads and documentation, please see:
  ~
  ~ http://gxa.github.com/gxa
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-3.0.xsd">


    <!-- enables annotation-based dependency injection -->
    <context:annotation-config/>

    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <context:component-scan base-package="uk.ac.ebi.atlas"/>

    <util:properties id="configuration" location="classpath:configuration.properties"/>

    <util:properties id="bioEntityCardPropertyFile" location="classpath:bundles/bioEntityCard.properties"/>
    <util:properties id="speciesToExperimentPropertyFile" location="classpath:bundles/speciesToExperiment.properties"/>

    <bean id="baselineExperimentLoader" class="uk.ac.ebi.atlas.trader.loader.BaselineExperimentsCacheLoader">
        <lookup-method name="createExperimentBuilder" bean="baselineExperimentBuilder"/>
        <lookup-method name="createExperimentalFactorsBuilder" bean="experimentalFactorsBuilder"/>
    </bean>

    <bean id="proteomicsbaselineExperimentLoader" class="uk.ac.ebi.atlas.trader.loader.ProteomicsBaselineExperimentsCacheLoader">
        <lookup-method name="createExperimentBuilder" bean="baselineExperimentBuilder"/>
        <lookup-method name="createExperimentalFactorsBuilder" bean="experimentalFactorsBuilder"/>
    </bean>

    <bean id="barChartTraderLoader" class="uk.ac.ebi.atlas.experimentpage.baseline.genedistribution.BarChartTradersCacheLoader">
        <lookup-method name="createBarChartTraderBuilder" bean="barChartTraderBuilder"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="uk.ac.ebi.atlas.web.GeneQuery">
                    <bean class="uk.ac.ebi.atlas.web.GeneQueryPropertyEditor">
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="singleThreadExecutorService" class="java.util.concurrent.Executors" scope="prototype"
          factory-method="newSingleThreadExecutor"/>

    <bean id="httpClient" class="org.apache.http.impl.client.DefaultHttpClient">
        <constructor-arg ref="httpClientConnectionManager"/>
    </bean>

    <bean id="efoLoader" class="uk.ac.ebi.arrayexpress.utils.efo.EFOLoader">
    </bean>

    <bean id="httpClientConnectionManager" class="org.apache.http.impl.conn.PoolingClientConnectionManager"
          destroy-method="shutdown">
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg>
            <bean class="org.springframework.http.client.SimpleClientHttpRequestFactory"
                  p:readTimeout="6000"
                  p:connectTimeout="6000" />
        </constructor-arg>
        <!--<property name="messageConverters">-->
        <!--<list>-->
        <!--<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>-->
        <!--</list>-->
        <!--</property>-->
    </bean>

    <bean id="restTemplateLongTimeout" class="org.springframework.web.client.RestTemplate">
        <constructor-arg>
            <bean class="org.springframework.http.client.SimpleClientHttpRequestFactory"
                  p:readTimeout="15000"
                  p:connectTimeout="15000" />
        </constructor-arg>
        <!--<property name="messageConverters">-->
        <!--<list>-->
        <!--<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>-->
        <!--</list>-->
        <!--</property>-->
    </bean>


    <bean id="jdbcTemplateOracle" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSourceOracle"/>
    </bean>

    <bean id="namedJdbcTemplateOracle" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSourceOracle"/>
    </bean>

    <!-- enables transactions where @Transaction annotations encountered -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceOracle"/>
    </bean>

</beans>